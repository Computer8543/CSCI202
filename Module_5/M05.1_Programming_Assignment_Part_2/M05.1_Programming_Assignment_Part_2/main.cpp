/* Program name: main.cpp
*  Author: Kyle Ingersoll
*  Date last updated: 11/24/2024
*  Purpose: Make a recursive function that reverse the elements in intArray between low and high indices. Also make a program to test that function. 
*/

#include <iostream>

// function prototype
void reverseElementsBetweenIndicesRecursively(int intArray[], int low, int high);

int main()
{
    // initialize variables
    int arraySize;
    int* intArray;
    int lowIndice, highIndice;

    // tell user purpose of program
    std::cout << "This program reverses integer array elements between 2 indices, low and high." << std::endl;

    // prompt user to enter in size of dynamic array
    std::cout << "Enter in the size of the array you want: ";
    std::cin >> arraySize;
    std::cout << std::endl;

    // do input verification and initialize dynamic array
    while (true) {
        // if input failure occurs, clear buffer and reprompt user for input
        if (!(std::cin)) {
            // clear input
            std::cin.clear();
            std::cin.ignore(200, '\n');

            // tell user that an error occured
            std::cerr << "You did not enter in an integer. Please reinput the size of the array as an integer greater than 0." << std::endl;

            // reprompt user for input
            std::cout << "Enter in the size of the array you want: ";
            std::cin >> arraySize;
            std::cout << std::endl;
            continue;
        }
        else if (arraySize <= 0) {
            // tell user that an error occured
            std::cerr << "You entered in an integer less than or equal to 0. Please reinput the size of the array as an integer greater than 0." << std::endl;

            // reprompt user for input
            std::cout << "Enter in the size of the array you want: ";
            std::cin >> arraySize;
            std::cout << std::endl;
            continue;
        }
        else {
            // initialize dynamic array and end loop
            intArray = new int[arraySize];
            break;
        }
        
    }
    
    // we then enter in the elements of the dynamic integer array, generated by ChatGPT and altered manually
    std::cout << "Enter in the integer elements of the array: ";
    for (int i = 0; i < arraySize; i++) {
        std::cin >> intArray[i];
    }
    std::cout << std::endl;

    // input low and high indices in the range to reverse, also generated by ChatGPT and altered manually
    std::cout << "Enter the low and high indices (0 <= low < high < " << arraySize << "): ";
    std::cin >> lowIndice >> highIndice;
    std::cout << std::endl;

    // input verification loop
    while (true) {
        // Ensure valid range, generated by ChatGPT and altered manually
        if (!(std::cin)) {
            // clear input
            std::cin.clear();
            std::cin.ignore(200, '\n');

            // inform user that error occured
            std::cerr << "You did not enter in a integer. Please enter in an integer for low and high indices." << std::endl;

            // input low and high indices in the range to reverse, also generated by ChatGPT and altered manually
            std::cout << "Enter the low and high indices (0 <= low < high < " << arraySize << "): ";
            std::cin >> lowIndice >> highIndice;
            std::cout << std::endl;
            continue;
        }
        else if (lowIndice < 0 || highIndice >= arraySize || lowIndice >= highIndice) {
            // output error message to the user
            std::cerr << "Invalid indices." << std::endl;

            // input low and high indices in the range to reverse, also generated by ChatGPT and altered manually
            std::cout << "Enter the low and high indices (0 <= low < high < " << arraySize << "): ";
            std::cin >> lowIndice >> highIndice;
            std::cout << std::endl;
            continue;

        }
        else {
            // Reverse the specified range
            reverseElementsBetweenIndicesRecursively(intArray, lowIndice, highIndice);

            // Output the modified array
            std::cout << "Array after reversing between indices " << lowIndice << " and " << highIndice << ": ";
            for (int i = 0; i < arraySize; i++) {
                std::cout << intArray[i] << " ";
            }
            std::cout << std::endl;
            break;
        }
    }
    

    // destroy dynamic array and set intArray pointer to nullptr to prevent memory leaks and avoid dangling pointers
    delete[] intArray;
    intArray = nullptr;


    // end program normally
    return 0;
}

/* Recursive function that reverses the elements in intArray between low and high indices. Generated by ChatGPT. */
void reverseElementsBetweenIndicesRecursively(int intArray[], int low, int high) {
    // Base case: If low is greater than or equal to high, stop recursion
    if (low >= high) {
        return;
    }

    // Swap the elements at indices low and high
    int temp = intArray[low];
    intArray[low] = intArray[high];
    intArray[high] = temp;

    // Recursive call to reverse the inner section
    reverseElementsBetweenIndicesRecursively(intArray, low + 1, high - 1);
}