#ifndef INVERTEDINDEX_H
#define INVERTEDINDEX_H

/* Program Name: InvertedIndex.h 
*  Author: Generated by ChatGPT using prompts by Kyle Ingersoll
*  Date last updated: 11/30/2024
*  Purpose: To create a class prototype for the inverted index data structure
*/

#include <unordered_map>
#include <unordered_set>
#include <set>
#include <vector>
#include <string>

class InvertedIndex {
private:
    std::unordered_map<std::string, std::set<int>> index; // Word -> Set of line numbers
    std::unordered_set<std::string> stopWords;

    // Helper functions
    std::string toLower(const std::string& str) const;
    std::string removePunctuation(const std::string& word) const;
    std::vector<std::string> tokenize(const std::string& line) const;

public:
    // Constructor
    InvertedIndex();

    // Build index from a file
    void buildIndex(const std::string& filename);

    // Search for a word in the index
    std::set<int> search(const std::string& word) const;

    // Print the entire index
    void printIndex() const;
};

#endif // INVERTEDINDEX_H

